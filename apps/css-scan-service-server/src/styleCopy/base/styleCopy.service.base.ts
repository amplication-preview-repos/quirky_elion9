/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, StyleCopy as PrismaStyleCopy } from "@prisma/client";

export class StyleCopyServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StyleCopyCountArgs, "select">
  ): Promise<number> {
    return this.prisma.styleCopy.count(args);
  }

  async styleCopies(
    args: Prisma.StyleCopyFindManyArgs
  ): Promise<PrismaStyleCopy[]> {
    return this.prisma.styleCopy.findMany(args);
  }
  async styleCopy(
    args: Prisma.StyleCopyFindUniqueArgs
  ): Promise<PrismaStyleCopy | null> {
    return this.prisma.styleCopy.findUnique(args);
  }
  async createStyleCopy(
    args: Prisma.StyleCopyCreateArgs
  ): Promise<PrismaStyleCopy> {
    return this.prisma.styleCopy.create(args);
  }
  async updateStyleCopy(
    args: Prisma.StyleCopyUpdateArgs
  ): Promise<PrismaStyleCopy> {
    return this.prisma.styleCopy.update(args);
  }
  async deleteStyleCopy(
    args: Prisma.StyleCopyDeleteArgs
  ): Promise<PrismaStyleCopy> {
    return this.prisma.styleCopy.delete(args);
  }
}
